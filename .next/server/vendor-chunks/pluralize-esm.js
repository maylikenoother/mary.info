"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pluralize-esm";
exports.ids = ["vendor-chunks/pluralize-esm"];
exports.modules = {

/***/ "(ssr)/./node_modules/pluralize-esm/dist/index.cjs":
/*!***************************************************!*\
  !*** ./node_modules/pluralize-esm/dist/index.cjs ***!
  \***************************************************/
/***/ ((module) => {

eval("\nconst pluralRules = [];\nconst singularRules = [];\nconst uncountables = /* @__PURE__ */ new Set();\nconst irregularPlurals = /* @__PURE__ */ new Map();\nconst irregularSingles = /* @__PURE__ */ new Map();\nconst sanitizeRule = (rule)=>typeof rule === \"string\" ? new RegExp(\"^\".concat(rule, \"$\"), \"i\") : rule;\nconst restoreCase = (word, token)=>{\n    if (typeof token !== \"string\") return word;\n    if (word === token) return token;\n    if (word === word.toLowerCase()) return token.toLowerCase();\n    if (word === word.toUpperCase()) return token.toUpperCase();\n    if (word[0] === word[0].toUpperCase()) {\n        return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n    return token.toLowerCase();\n};\nconst sanitizeWord = (token, word, rules)=>{\n    if (!token.length || uncountables.has(token)) {\n        return word;\n    }\n    let { length: len } = rules;\n    while(len--){\n        const rule = rules[len];\n        if (rule[0].test(word)) {\n            return word.replace(rule[0], function() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                const [match, index] = args;\n                const result = rule[1].replace(/\\$(\\d{1,2})/g, (_, index2)=>args[index2] || \"\");\n                if (match === \"\") {\n                    return restoreCase(word[index - 1], result);\n                }\n                return restoreCase(match, result);\n            });\n        }\n    }\n    return word;\n};\nconst compute = (word, replaceMap, keepMap, rules)=>{\n    const token = word.toLowerCase();\n    if (keepMap.has(token)) {\n        return restoreCase(word, token);\n    }\n    if (replaceMap.has(token)) {\n        return restoreCase(word, replaceMap.get(token));\n    }\n    return sanitizeWord(token, word, rules);\n};\nconst mapHas = (word, replaceMap, keepMap, rules)=>{\n    const token = word.toLowerCase();\n    if (keepMap.has(token)) return true;\n    if (replaceMap.has(token)) return false;\n    return sanitizeWord(token, token, rules) === token;\n};\nconst pluralize = (word, count, inclusive)=>{\n    const pluralized = count === 1 ? pluralize.singular(word) : pluralize.plural(word);\n    if (inclusive) return \"\".concat(count, \" \").concat(pluralized);\n    return pluralized;\n};\npluralize.plural = (word)=>compute(word, irregularSingles, irregularPlurals, pluralRules);\npluralize.singular = (word)=>compute(word, irregularPlurals, irregularSingles, singularRules);\npluralize.addPluralRule = (rule, replacement)=>{\n    pluralRules.push([\n        sanitizeRule(rule),\n        replacement\n    ]);\n};\npluralize.addSingularRule = (rule, replacement)=>{\n    singularRules.push([\n        sanitizeRule(rule),\n        replacement\n    ]);\n};\npluralize.addIrregularRule = (single, plural)=>{\n    const _plural = plural.toLowerCase();\n    const _single = single.toLowerCase();\n    irregularSingles.set(_single, _plural);\n    irregularPlurals.set(_plural, _single);\n};\npluralize.addUncountableRule = (rule)=>{\n    if (typeof rule === \"string\") {\n        uncountables.add(rule.toLowerCase());\n        return;\n    }\n    pluralize.addPluralRule(rule, \"$0\");\n    pluralize.addSingularRule(rule, \"$0\");\n};\npluralize.isPlural = (word)=>mapHas(word, irregularSingles, irregularPlurals, pluralRules);\npluralize.isSingular = (word)=>mapHas(word, irregularPlurals, irregularSingles, singularRules);\nconst defaultIrregulars = [\n    // Pronouns.\n    [\n        \"I\",\n        \"we\"\n    ],\n    [\n        \"me\",\n        \"us\"\n    ],\n    [\n        \"he\",\n        \"they\"\n    ],\n    [\n        \"she\",\n        \"they\"\n    ],\n    [\n        \"them\",\n        \"them\"\n    ],\n    [\n        \"myself\",\n        \"ourselves\"\n    ],\n    [\n        \"yourself\",\n        \"yourselves\"\n    ],\n    [\n        \"itself\",\n        \"themselves\"\n    ],\n    [\n        \"herself\",\n        \"themselves\"\n    ],\n    [\n        \"himself\",\n        \"themselves\"\n    ],\n    [\n        \"themself\",\n        \"themselves\"\n    ],\n    [\n        \"is\",\n        \"are\"\n    ],\n    [\n        \"was\",\n        \"were\"\n    ],\n    [\n        \"has\",\n        \"have\"\n    ],\n    [\n        \"this\",\n        \"these\"\n    ],\n    [\n        \"that\",\n        \"those\"\n    ],\n    [\n        \"my\",\n        \"our\"\n    ],\n    [\n        \"its\",\n        \"their\"\n    ],\n    [\n        \"his\",\n        \"their\"\n    ],\n    [\n        \"her\",\n        \"their\"\n    ],\n    // Words ending in with a consonant and `o`.\n    [\n        \"echo\",\n        \"echoes\"\n    ],\n    [\n        \"dingo\",\n        \"dingoes\"\n    ],\n    [\n        \"volcano\",\n        \"volcanoes\"\n    ],\n    [\n        \"tornado\",\n        \"tornadoes\"\n    ],\n    [\n        \"torpedo\",\n        \"torpedoes\"\n    ],\n    // Ends with `us`.\n    [\n        \"genus\",\n        \"genera\"\n    ],\n    [\n        \"viscus\",\n        \"viscera\"\n    ],\n    // Ends with `ma`.\n    [\n        \"stigma\",\n        \"stigmata\"\n    ],\n    [\n        \"stoma\",\n        \"stomata\"\n    ],\n    [\n        \"dogma\",\n        \"dogmata\"\n    ],\n    [\n        \"lemma\",\n        \"lemmata\"\n    ],\n    [\n        \"schema\",\n        \"schemata\"\n    ],\n    [\n        \"anathema\",\n        \"anathemata\"\n    ],\n    // Other irregular rules.\n    [\n        \"ox\",\n        \"oxen\"\n    ],\n    [\n        \"axe\",\n        \"axes\"\n    ],\n    [\n        \"die\",\n        \"dice\"\n    ],\n    [\n        \"yes\",\n        \"yeses\"\n    ],\n    [\n        \"foot\",\n        \"feet\"\n    ],\n    [\n        \"eave\",\n        \"eaves\"\n    ],\n    [\n        \"goose\",\n        \"geese\"\n    ],\n    [\n        \"tooth\",\n        \"teeth\"\n    ],\n    [\n        \"quiz\",\n        \"quizzes\"\n    ],\n    [\n        \"human\",\n        \"humans\"\n    ],\n    [\n        \"proof\",\n        \"proofs\"\n    ],\n    [\n        \"carve\",\n        \"carves\"\n    ],\n    [\n        \"valve\",\n        \"valves\"\n    ],\n    [\n        \"looey\",\n        \"looies\"\n    ],\n    [\n        \"thief\",\n        \"thieves\"\n    ],\n    [\n        \"groove\",\n        \"grooves\"\n    ],\n    [\n        \"pickaxe\",\n        \"pickaxes\"\n    ],\n    [\n        \"passerby\",\n        \"passersby\"\n    ],\n    [\n        \"canvas\",\n        \"canvases\"\n    ]\n];\nconst defaultPlurals = [\n    [\n        /s?$/i,\n        \"s\"\n    ],\n    [\n        /[^\\u0000-\\u007F]$/i,\n        \"$0\"\n    ],\n    [\n        /([^aeiou]ese)$/i,\n        \"$1\"\n    ],\n    [\n        /(ax|test)is$/i,\n        \"$1es\"\n    ],\n    [\n        /(alias|[^aou]us|t[lm]as|gas|ris)$/i,\n        \"$1es\"\n    ],\n    [\n        /(e[mn]u)s?$/i,\n        \"$1s\"\n    ],\n    [\n        /([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i,\n        \"$1\"\n    ],\n    [\n        /(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i,\n        \"$1i\"\n    ],\n    [\n        /(alumn|alg|vertebr)(?:a|ae)$/i,\n        \"$1ae\"\n    ],\n    [\n        /(seraph|cherub)(?:im)?$/i,\n        \"$1im\"\n    ],\n    [\n        /(her|at|gr)o$/i,\n        \"$1oes\"\n    ],\n    [\n        /(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i,\n        \"$1a\"\n    ],\n    [\n        /(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i,\n        \"$1a\"\n    ],\n    [\n        /sis$/i,\n        \"ses\"\n    ],\n    [\n        /(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i,\n        \"$1$2ves\"\n    ],\n    [\n        /([^aeiouy]|qu)y$/i,\n        \"$1ies\"\n    ],\n    [\n        /([^ch][ieo][ln])ey$/i,\n        \"$1ies\"\n    ],\n    [\n        /(x|ch|ss|sh|zz)$/i,\n        \"$1es\"\n    ],\n    [\n        /(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i,\n        \"$1ices\"\n    ],\n    [\n        /\\b((?:tit)?m|l)(?:ice|ouse)$/i,\n        \"$1ice\"\n    ],\n    [\n        /(pe)(?:rson|ople)$/i,\n        \"$1ople\"\n    ],\n    [\n        /(child)(?:ren)?$/i,\n        \"$1ren\"\n    ],\n    [\n        /eaux$/i,\n        \"$0\"\n    ],\n    [\n        /m[ae]n$/i,\n        \"men\"\n    ],\n    [\n        \"thou\",\n        \"you\"\n    ]\n];\nconst defaultSingles = [\n    [\n        /s$/i,\n        \"\"\n    ],\n    [\n        /(ss)$/i,\n        \"$1\"\n    ],\n    [\n        /(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i,\n        \"$1fe\"\n    ],\n    [\n        /(ar|(?:wo|[ae])l|[eo][ao])ves$/i,\n        \"$1f\"\n    ],\n    [\n        /ies$/i,\n        \"y\"\n    ],\n    [\n        /(dg|ss|ois|lk|ok|wn|mb|th|ch|ec|oal|is|ck|ix|sser|ts|wb)ies$/i,\n        \"$1ie\"\n    ],\n    [\n        /\\b(l|(?:neck|cross|hog|aun)?t|coll|faer|food|gen|goon|group|hipp|junk|vegg|(?:pork)?p|charl|calor|cut)ies$/i,\n        \"$1ie\"\n    ],\n    [\n        /\\b(mon|smil)ies$/i,\n        \"$1ey\"\n    ],\n    [\n        /\\b((?:tit)?m|l)ice$/i,\n        \"$1ouse\"\n    ],\n    [\n        /(seraph|cherub)im$/i,\n        \"$1\"\n    ],\n    [\n        /(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i,\n        \"$1\"\n    ],\n    [\n        /(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i,\n        \"$1sis\"\n    ],\n    [\n        /(movie|twelve|abuse|e[mn]u)s$/i,\n        \"$1\"\n    ],\n    [\n        /(test)(?:is|es)$/i,\n        \"$1is\"\n    ],\n    [\n        /(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i,\n        \"$1us\"\n    ],\n    [\n        /(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i,\n        \"$1um\"\n    ],\n    [\n        /(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i,\n        \"$1on\"\n    ],\n    [\n        /(alumn|alg|vertebr)ae$/i,\n        \"$1a\"\n    ],\n    [\n        /(cod|mur|sil|vert|ind)ices$/i,\n        \"$1ex\"\n    ],\n    [\n        /(matr|append)ices$/i,\n        \"$1ix\"\n    ],\n    [\n        /(pe)(rson|ople)$/i,\n        \"$1rson\"\n    ],\n    [\n        /(child)ren$/i,\n        \"$1\"\n    ],\n    [\n        /(eau)x?$/i,\n        \"$1\"\n    ],\n    [\n        /men$/i,\n        \"man\"\n    ]\n];\nconst defaultUncountables = [\n    // Singular words with no plurals.\n    \"adulthood\",\n    \"advice\",\n    \"agenda\",\n    \"aid\",\n    \"aircraft\",\n    \"alcohol\",\n    \"ammo\",\n    \"analytics\",\n    \"anime\",\n    \"athletics\",\n    \"audio\",\n    \"bison\",\n    \"blood\",\n    \"bream\",\n    \"buffalo\",\n    \"butter\",\n    \"carp\",\n    \"cash\",\n    \"chassis\",\n    \"chess\",\n    \"clothing\",\n    \"cod\",\n    \"commerce\",\n    \"cooperation\",\n    \"corps\",\n    \"debris\",\n    \"diabetes\",\n    \"digestion\",\n    \"elk\",\n    \"energy\",\n    \"equipment\",\n    \"excretion\",\n    \"expertise\",\n    \"firmware\",\n    \"flounder\",\n    \"fun\",\n    \"gallows\",\n    \"garbage\",\n    \"graffiti\",\n    \"hardware\",\n    \"headquarters\",\n    \"health\",\n    \"herpes\",\n    \"highjinks\",\n    \"homework\",\n    \"housework\",\n    \"information\",\n    \"jeans\",\n    \"justice\",\n    \"kudos\",\n    \"labour\",\n    \"literature\",\n    \"machinery\",\n    \"mackerel\",\n    \"mail\",\n    \"media\",\n    \"mews\",\n    \"moose\",\n    \"music\",\n    \"mud\",\n    \"manga\",\n    \"news\",\n    \"only\",\n    \"personnel\",\n    \"pike\",\n    \"plankton\",\n    \"pliers\",\n    \"police\",\n    \"pollution\",\n    \"premises\",\n    \"rain\",\n    \"research\",\n    \"rice\",\n    \"salmon\",\n    \"scissors\",\n    \"series\",\n    \"sewage\",\n    \"shambles\",\n    \"shrimp\",\n    \"software\",\n    \"staff\",\n    \"swine\",\n    \"tennis\",\n    \"traffic\",\n    \"transportation\",\n    \"trout\",\n    \"tuna\",\n    \"wealth\",\n    \"welfare\",\n    \"whiting\",\n    \"wildebeest\",\n    \"wildlife\",\n    \"you\",\n    /pok[eé]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i,\n    // \"chinese\", \"japanese\"\n    /deer$/i,\n    // \"deer\", \"reindeer\"\n    /fish$/i,\n    // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i,\n    // \"carnivorous\"\n    /pox$/i,\n    // \"chickpox\", \"smallpox\"\n    /sheep$/i\n];\nfor (const [single, plural] of defaultIrregulars){\n    pluralize.addIrregularRule(single, plural);\n}\nfor (const [search, replacement] of defaultPlurals){\n    pluralize.addPluralRule(search, replacement);\n}\nfor (const [search, replacement] of defaultSingles){\n    pluralize.addSingularRule(search, replacement);\n}\nfor (const search of defaultUncountables){\n    pluralize.addUncountableRule(search);\n}\nmodule.exports = pluralize; //# sourceMappingURL=index.cjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pluralize-esm/dist/index.cjs\n");

/***/ })

};
;